using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Core.Library
{
    public class PredictSets
    {
        string program = "\"Let\", \"Var\", \"Task\", \"Array\", \"Object\", \"Lead\"";
        string global = "\"Let\", \"Var\", \"Task\", \"Array\", \"Object\", \"Lead\"";
        string global_choice = "\"Let\", \"Var\", \"Array\", \"Task\", \"Object\"";
        string dtype = "\"Int\", \"Double\", \"Char\", \"String\", \"Double\", \"Boolean\"";
        string OBJECT = "\"Object\"";
        string objdec_choice = "\"Object\", \"Var\", \"End\"";
        string var = "\"Var\"";
        string varinit = "\"Int\", \"Double\", \"Char\", \"String\", \"Double\"";
        string objvar = "\"Object\"";
        string varname = "\"id\", \".\", \";\", \".\"";
        string varnames = "\";\", \".\"";
        string task = "\"Task\"";
        string RETURN = "\"Null\", \"Int\", \"Double\", \"Char\", \"String\", \"Boolean\"";
        string tparam = "\"(\", \".\"";
        string tparams = "\";\", \")\"";
        string array = "\"Array\"";
        string size = "\"intlit\"";
        string sizes = "\"by\", \".\"";
        string varlet = "\"Let\", \"Var\"";
        string vardec = "\"Int\", \"Double\", \"Char\", \"String\", \"Boolean\"";
        string varINT = "\"Int\"";
        string initINT = "\"is\", \".\", \";\"";
        string varDOUBLE = "\"Double\"";
        string initDOUBLE = "\"is\", \".\", \";\"";
        string varCHAR = "\"Char\"";
        string initCHAR = "\"is\", \".\", \";\"";
        string varSTRING = "\"String\"";
        string initSTRING = "\"is\", \".\", \";\"";
        string varBOOLEAN = "\"Boolean\"";
        string initBOOLEAN = "\"is\", \".\", \";\"";
        string ids1 = "\";\", \".\"";
        string ids2 = "\";\", \".\"";
        string ids3 = "\";\", \".\"";
        string ids4 = "\";\", \".\"";
        string ids5 = "\";\", \".\"";
        string ids1_tail = "\"is\", \";\", \".\"";
        string ids2_tail = "\"is\", \";\", \".\"";
        string ids3_tail = "\"is\", \";\", \".\"";
        string ids4_tail = "\"is\", \";\", \".\"";
        string ids5_tail = "\"is\", \";\", \".\"";
        string value1 = "\"intlit\", \"(\"";
        string value2 = "\"doublelit\", \"(\"";
        string value3 = "\"charlit\"";
        string value4 = "\"stringlit\"";
        string value5 = "\"boollit\"";
        string numvalue = "\"intlit\"";
        string Operations1 = "\"+\", \"-\", \"*\", \"/\", \"%\", \")\", \";\", \".\"";
        string OpInt = "\"intlit\", \"(\"";
        string Op1 = "\"+\", \"-\", \"*\", \"/\", \"%\", \")\", \";\", \".\"";
        string doublevalue = "\"doublelit\"";
        string Operations2 = "\"+\", \"-\", \"*\", \"/\", \"%\", \")\", \";\", \".\"";
        string OpDouble = "\"doublelit\", \"(\"";
        string Op2 = "\"+\", \"-\", \"*\", \"/\", \"%\", \")\", \";\", \".\"";
        string mathOp = "\"+\", \"-\", \"*\", \"/\", \"%\"";
        string incdec = "\"++\", \"--\"";
        string relop1 = "\"==\", \"!=\", \">\", \"<\", \">=\", \"<=\"";
        string logop1 = "\"&&\", \"||\"";
        string logop2 = "\"!\", \"boollit\", \"id\", \"(\"";
        string body = "\"Var\", \"Clear\", \"id\", \"Int\", \"Char\", \"Boolean\", \"Double\", \"String\", \"++\", \"--\", \"Object\", \"Until\", \"Do\", \"For\", \"Array\", \"If\", \"Read\", \"Say\", \"Option\"";
        string statements = "\"Var\", \"Clear\", \"id\", \"Int\", \"Char\", \"Boolean\", \"Double\", \"String\", \"++\", \"--\", \"Object\", \"Until\", \"Do\", \"For\", \"Array\", \"If\", \"Read\", \"Say\", \"Option\", \".\", \"Stop\", \"End\"";
        string functions = "\"Var\", \"Int\", \"Char\", \"Boolean\", \"Double\", \"String\", \"Array\", \"Clear\", \"id\", \"++\", \"--\", \"Read\", \"Say\", \"Object\", \"If\", \"Until\", \"Do\", \"For\", \"Option\"";
        string id_choices = "\"[\", \"(\", \"=\", \"@\", \"++\", \"--\"";
        string subelement_choice = "\"++\", \"--\", \"=\", \"Int\", \"Double\", \"Char\", \"String\", \"Boolean\"";
        string varinitINT = "\"Int\"";
        string varinitDOUBLE = "\"Double\"";
        string varinitCHAR = "\"Char\"";
        string varinitSTRING = "\"String\"";
        string varinitBOOLEAN = "\"Boolean\"";
        string INT = "\"intlit\", \"id\", \"(\", \"++\", \"--\"";
        string intchoices = "\"@\", \"++\", \"--\", \"(\", \".\"";
        string intchoice1 = "\"@\", \"++\", \"--\"";
        string intchoice2 = "\"(\"";
        string incdec_null = "\"++\", \"--\", \"+\", \"-\", \"*\", \"/\", \"%\", \".\"";
        string DOUBLE = "\"double\", \"id\", \"(\", \"++\", \"--\"";
        string doublechoices = "\"@\", \"++\", \"--\", \"(\", \".\"";
        string doublechoice1 = "\"@\", \"++\", \"--\"";
        string doublechoice2 = "\"(\"";
        string CHAR = "\"charlit\", \"id\"";
        string STRING = "\"stringlit\", \"id\"";
        string BOOLEAN = "\"boollit\", \"id\"";
        string task_id = "\"id\"";
        string param = "\"intlit\", \"doublelit\", \"charlit\", \"stringlit\", \"boollit\", \"id\", \")\"";
        string PARAMS = "\";\", \")\"";
        string value = "\"intlit\", \"doublelit\", \"charlit\", \"stringlit\", \"boollit\", \"id\"";
        string io_statement = "\"Read\", \"Say\"";
        string input = "\"Read\"";
        string output = "\"Say\"";
        string input_statement = "\"stringlit\", \"id\"";
        string concat = "\",\", \".\"";
        string concat_value = "\"stringlit\", \"id\"";
        string incdecvar = "\"++\", \"--\", \"id\"";
        string subelement = "\"@\", \"++\", \"--\", \"@\", \"Start\", \",\", \".\", \"&&\", \"||\", \">=\", \"<=\", \"<\", \">\", \"==\", \"!=\", \")\", \";\"";
        string input_tail = "\"@\", \",\", \".\"";
        string input_id = "\"id\"";
        string multi = "\"[\", \"=\"";
        string index = "\"intlit\", \"id\", \"]\"";
        string IfOtherwise = "\"If\"";
        string or = "\"Or\", \"intlit\", \"doublelit\", \"charlit\", \"stringlit\", \"!\", \"id\", \"boollit\", \"(\", \"Otherwise\"";
        string otherwise = "\"Otherwise\", \"EndIf\"";
        string cond_loop = "\"Var\", \"Clear\", \"id\", \"Int\", \"Char\", \"Boolean\", \"Double\", \"String\", \"++\", \"--\", \"Object\", \"Until\", \"Do\", \"For\", \"Array\", \"If\", \"Read\", \"Say\", \"Option\", \"Loop\", \"LoopIf\", \"Skip\", \"Stop\", \"Or\", \"intlit\", \"doublelit\", \"charlit\", \"stringlit\", \"id\", \"boollit\", \"EndIf\", \"Otherwise\"";
        string control = "\"Skip\", \"Stop\", \"Var\", \"Clear\", \"id\", \"Int\", \"Char\", \"Boolean\", \"Double\", \"String\", \"++\", \"--\", \"Object\", \"Until\", \"Do\", \"For\", \"Array\", \"If\", \"Read\", \"Say\", \"Option\", \"Loop\", \"LoopIf\", \"Or\", \"intlit\", \"doublelit\", \"charlit\", \"stringlit\", \"boollit\", \"EndIf\", \"Otherwise\"";
        string conditions = "\"intlit\", \"doublelit\", \"charlit\", \"stringlit\", \"!\", \"id\", \"boollit\", \"(\", \"id\"";
        string conditionschoice = "\"intlit\", \"doublelit\", \"charlit\", \"stringlit\", \"!\", \"id\", \"boollit\", \"(\"";
        string multiconds = "\"(\"";
        string idschoice = "\"!\", \"id\", \"boollit\", \"intlit\", \"doublelit\", \"charlit\", \"stringlit\"";
        string idschoice1 = "\"id\", \"boollit\"";
        string idsbody = "\"@\", \"(\", \"&&\", \"||\", \">=\", \"<=\", \"<\", \">\", \"==\", \"!=\", \")\"";
        string condsTail = "\"&&\", \"||\", \">=\", \"<=\", \"<\", \">\", \"==\", \"!=\", \")\"";
        string logOps = "\"&&\", \"||\", \"==\", \"!=\", \")\"";
        string relOps = "\">=\", \"<=\", \"<\", \">\", \"==\", \"!=\"";
        string relopNum = "\">=\", \"<=\", \"<\", \">\"";
        string relopText = "\"==\", \"!=\"";
        string numval = "\"intlit\", \"doublelit\", \"id\"";
        string condsub = "\"&&\", \"||\", \")\", \"@\"";
        string ids = "\"id\", \"!\", \"boollit\", \"id\"";
        string ids_null = "\"boollit\", \"id\"";
        string option = "\"Option\"";
        string optiontails = "\"intlit\", \"charlit\", \"stringlit\"";
        string optiontail1 = "\"intlit\"";
        string optiontail2 = "\"charlit\"";
        string optiontail3 = "\"stringlit\"";
        string state1 = "\"State\", \"Var\", \"Clear\", \"id\", \"Int\", \"Char\", \"Boolean\", \"Double\", \"String\", \"++\", \"--\", \"Object\", \"Until\", \"Do\", \"For\", \"Array\", \"If\", \"Read\", \"Say\", \"Option\", \"Default\"";
        string state2 = "\"State\", \"Var\", \"Clear\", \"id\", \"Int\", \"Char\", \"Boolean\", \"Double\", \"String\", \"++\", \"--\", \"Object\", \"Until\", \"Do\", \"For\", \"Array\", \"If\", \"Read\", \"Say\", \"Option\", \"Default\"";
        string state3 = "\"State\", \"Var\", \"Clear\", \"id\", \"Int\", \"Char\", \"Boolean\", \"Double\", \"String\", \"++\", \"--\", \"Object\", \"Until\", \"Do\", \"For\", \"Array\", \"If\", \"Read\", \"Say\", \"Option\", \"Default\"";
        string DEFAULT = "\"Default\", \"End\"";
        string loopstate = "\"Until\", \"Do\", \"For\"";
        string initialize = "\"id\", \";\"";
        string cond = "\"id\", \";\"";
        string taskdef = "\"Task\", \"#\"";
        string returntype = "\"Int\", \"Double\", \"Char\", \"String\", \"Boolean\", \"Null\"";
        string taskbody = "\"Start\"";
        string taskbodytail = "\"Var\", \"Clear\", \"id\", \"Int\", \"Char\", \"Boolean\", \"Double\", \"String\", \"++\", \"--\", \"Object\", \"Until\", \"Do\", \"For\", \"Array\", \"If\", \"Read\", \"Say\", \"Option\", \".\", \"Response\"";
        string returnINT = "\"intlit\", \"id\"";
        string returnDOUBLE = "\"doublelit\", \"id\"";
        string returnCHAR = "\"charlit\", \"id\"";
        string returnSTRING = "\"stringlit\", \"id\"";
        string returnBOOLEAN = "\"boollit\", \"id\"";
        string returntail = "\"(\", \"@\", \".\"";
        string StartProgram = "\"Lead\", \"Let\", \"Var\", \"Task\", \"Array\", \"Object\"";

        public string GetPredictSet(int code)
        {
            switch (code)
            {
                
                case 2001: return StartProgram;
                case 2002: return program;
                case 2003: return global;
                case 2004: return global_choice;
                case 2005: return dtype;
                case 2006: return OBJECT;
                case 2007: return objdec_choice;
                case 2008: return var;
                case 2009: return objvar;
                case 2010: return varname;
                case 2011: return varnames;
                case 2012: return task;
                case 2013: return RETURN;
                case 2014: return tparam;
                case 2015: return tparams;
                case 2016: return array;
                case 2017: return size;
                case 2018: return sizes;
                case 2019: return varlet;
                case 2020: return vardec;
                case 2021: return varINT;
                case 2022: return initINT;
                case 2023: return varDOUBLE;
                case 2024: return initDOUBLE;
                case 2025: return varCHAR;
                case 2026: return initCHAR;
                case 2027: return varSTRING;
                case 2028: return initSTRING;
                case 2029: return varBOOLEAN;
                case 2030: return initBOOLEAN;
                case 2031: return ids1;
                case 2032: return ids2;
                case 2033: return ids3;
                case 2034: return ids4;
                case 2035: return ids5;
                case 2036: return ids1_tail;
                case 2037: return ids2_tail;
                case 2038: return ids3_tail;
                case 2039: return ids4_tail;
                case 2040: return ids5_tail;
                case 2041: return value1;
                case 2042: return value2;
                case 2043: return value3;
                case 2044: return value4;
                case 2045: return value5;
                case 2046: return numvalue;
                case 2048: return Operations1;
                case 2049: return OpInt;
                case 2050: return Op1;
                case 2051: return doublevalue; 
                case 2052: return Operations2;
                case 2053: return OpDouble;
                case 2054: return Op2;
                case 2055: return mathOp;
                case 2056: return incdec;
                case 2057: return relop1;
                case 2058: return logop1;
                case 2059: return logop2;
                case 2060: return body;
                case 2061: return statements; 
                case 2062: return functions;
                case 2063: return id_choices;
                case 2064: return subelement_choice;
                case 2065: return varinit;
                case 2066: return varinitINT; 
                case 2067: return varinitDOUBLE;
                case 2068: return varinitCHAR;
                case 2069: return varinitSTRING;
                case 2070: return varinitBOOLEAN;
                case 2071: return INT;
                case 2072: return intchoices; 
                case 2073: return intchoice1;
                case 2074: return intchoice2;
                case 2075: return DOUBLE;
                case 2076: return doublechoices;
                case 2077: return doublechoice1;
                case 2078: return doublechoice2;
                case 2079: return CHAR;
                case 2080: return STRING;
                case 2081: return BOOLEAN;
                case 2082: return task_id;
                case 2083: return param;
                case 2084: return PARAMS;
                case 2085: return value;
                case 2086: return io_statement; 
                case 2087: return input;
                case 2088: return output;
                case 2089: return input_statement;
                case 2090: return concat;
                case 2091: return concat_value;
                case 2092: return subelement;
                case 2093: return input_id;
                case 2094: return multi;
                case 2095: return index;
                case 2096: return IfOtherwise; 
                case 2097: return or;
                case 2098: return otherwise; 
                case 2099: return cond_loop;
                case 2100: return control;
                case 2101: return conditions;
                case 2102: return conditionschoice;
                case 2103: return multiconds;
                case 2104: return idschoice;
                case 2105: return idschoice1;
                case 2106: return idsbody;
                case 2107: return condsTail;
                case 2108: return logOps;
                case 2109: return relOps;
                case 2110: return relopNum;
                case 2111: return relopText;
                case 2112: return numval;
                case 2113: return option;
                case 2114: return optiontails;
                case 2115: return optiontail1;
                case 2116: return optiontail2;
                case 2117: return optiontail3;
                case 2118: return state1;
                case 2119: return state2;
                case 2120: return state3;
                case 2121: return DEFAULT;
                case 2122: return incdecvar;
                case 2123: return loopstate;
                case 2124: return initialize;
                case 2125: return cond;
                case 2126: return taskdef;
                case 2127: return returntype;
                case 2128: return taskbody;
                case 2129: return taskbodytail;
                case 2130: return returnINT;
                case 2131: return returnDOUBLE;
                case 2132: return returnCHAR;
                case 2133: return returnSTRING;
                case 2134: return returnBOOLEAN;
                case 2135: return returntail;
                case 2136: return input_tail;
                case 2137: return condsub;
            }
            return "";
        }
    }
    
}
